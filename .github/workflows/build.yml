name: build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
jobs:
  GCC:
    name: ${{ matrix.config.name }}
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: "Ubuntu GCC Debug",
            config: "debug",
          }
        - {
            name: "Ubuntu GCC Release",
            config: "release",
          }
    steps:
      - uses: actions/checkout@v2
      - uses: textbook/git-checkout-submodule-action@master
      - name: update
        run: sudo apt update
      - name: Get X11
        run: sudo apt-get install xorg-dev
      - name: Premake
        run: | 
            sudo chmod +x Tools/Premake5/premake5
            sudo Tools/Premake5/premake5 gmake2
#      - name: Download artifact
#        uses: dawidd6/action-download-artifact@v2
#        with:
#          name: Unix-dependencies
#          workflow: prebuild.yml
#          workflow_conclusion: success
#          branch: master
      - name: Build
        run: make config=${{ matrix.config.config }} -j6
  msvc:
    name: MSVC api=glfwapi config=${{ matrix.configuration }}
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        configuration: [debug, release]
        glfwapi: [opengl, vulkan]
    env:
      VS_PATH: C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\
      MSBUILD_PATH: C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin\
    steps:
      - uses: actions/checkout@v2
      - name: Get submodules
        shell: cmd
        run: |
          git submodule init
          git submodule update
      - name: Get premake5
        shell: powershell
        run: |
          Invoke-WebRequest -Uri "https://github.com/premake/premake-core/releases/download/v5.0.0-alpha15/premake-5.0.0-alpha15-windows.zip" -OutFile "premake.zip"
          Expand-Archive -Path premake.zip
      - name: Generate solution
        shell: cmd
        run: premake\premake5.exe vs2019
#      - name: Download artifact
#        uses: dawidd6/action-download-artifact@v2
#        with:
#          name: Win-dependencies
#          workflow: prebuild.yml
#          workflow_conclusion: success
#          branch: master
      - name: Generate solution
        shell: cmd
        run: premake\premake5 --glfwapi=${{ matrix.glfwapi }} vs2019
      - name: Build
        shell: cmd
        run: '"%MSBUILD_PATH%\MSBuild.exe" Engine.sln /p:Configuration=${{ matrix.configuration }}'
