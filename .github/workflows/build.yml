name: build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
jobs:
  GCC:
    name: GCC
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: textbook/git-checkout-submodule-action@master
      - name: update
        run: sudo apt update
      - name: Get X11
        run: sudo apt-get install xorg-dev
      - name: Premake
        run: |
          wget https://github.com/premake/premake-core/releases/download/v5.0.0-alpha15/premake-5.0.0-alpha15-linux.tar.gz -O premake.tar.gz
          tar -xf premake.tar.gz
          ./premake5 gmake2
      - name: Download artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          name: Unix-dependencies
          workflow: prebuild.yml
          workflow_conclusion: success
          branch: master
      - name: check2
        run: |
          ls
          cd bin
          ls
      - name: Build debug
        run: make config=debug -j6
      - name: Build release
        run: make config=release -j6
  msvc:
    name: MSVC
    runs-on: windows-latest
    env:
      VS_PATH: C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\
      MSBUILD_PATH: C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin\
    steps:
      - uses: actions/checkout@v2
      - name: Get submodules
        shell: cmd
        run: |
          git submodule init
          git submodule update
      - name: Get premake5
        shell: powershell
        run: |
          Invoke-WebRequest -Uri "https://github.com/premake/premake-core/releases/download/v5.0.0-alpha15/premake-5.0.0-alpha15-windows.zip" -OutFile "premake.zip"
          Expand-Archive -Path premake.zip
      - name: Generate solution
        shell: cmd
        run: premake\premake5.exe vs2019
      - name: Download artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          name: Win-dependencies
          workflow: prebuild.yml
          workflow_conclusion: success
          branch: master
      - name: Setup Vulkan
        shell: powershell
        run: |
            Invoke-WebRequest -Uri "https://sdk.lunarg.com/sdk/download/1.1.126.0/windows/VulkanSDK-1.1.126.0-Installer.exe" -OutFile VulkanSDK.exe
            $installer = Start-Process -FilePath VulkanSDK.exe -Wait -PassThru -ArgumentList @("/S");
            $installer.WaitForExit();
      - name: Generate vulkan solution
        shell: cmd
        run: premake\premake5 --glfwapi=vulkan vs2019
      - name: Build vulkan debug
        shell: cmd
        run: '"%MSBUILD_PATH%\MSBuild.exe" Engine.sln /p:Configuration=Debug'
      - name: Generate normal solution
        shell: cmd
        run: premake\premake5.exe vs2019
      - name: Build release
        shell: cmd
        run: '"%MSBUILD_PATH%\MSBuild.exe" Engine.sln /p:Configuration=Release'
      - name: Build debug
        shell: cmd
        run: '"%MSBUILD_PATH%\MSBuild.exe" Engine.sln /p:Configuration=Debug'
