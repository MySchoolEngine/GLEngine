name: build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
jobs:
  GCC:
    name: GCC api=${{ matrix.glfwapi }} config=${{ matrix.configuration }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        configuration: [debug, release]
        glfwapi: [opengl, vulkan]
    steps:
      - uses: actions/checkout@v2.5.0
        with:
          submodules: recursive
      - name: Set up g++-10
        run: |
          cd /usr/bin && sudo ln -f g++-10 g++
      - name: update
        run: sudo apt update
      - name: Get X11
        run: sudo apt-get install xorg-dev
      - name: Vulkan update
        if: ${{matrix.glfwapi == 'vulkan'}}
        uses: humbletim/setup-vulkan-sdk@v1.2.0
        with:
          vulkan-query-version: 1.3.204.0
          vulkan-components: Vulkan-Headers, Vulkan-Loader
          vulkan-use-cache: true
      - name: Get uuid
        run: sudo apt-get install uuid-dev
      - name: Premake
        run: |
            sudo chmod +x Tools/Premake5/premake5
            sudo Tools/Premake5/premake5 gmake2 --glfwapi=${{ matrix.glfwapi }}
      - name: Build
        run: make config=${{ matrix.configuration }} -j6
  msvc:
    name: MSVC api=${{ matrix.glfwapi }} config=${{ matrix.configuration }}
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        configuration: [debug, release]
        glfwapi: [opengl, vulkan]
    steps:
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.1
      - uses: actions/checkout@v2.5.0
        with:
          submodules: recursive
      - name: Generate solution
        shell: cmd
        run: Tools\Premake5\premake5.exe --glfwapi=${{ matrix.glfwapi }} vs2019
      - name: Build
        shell: cmd
        run: msbuild Engine.sln /p:Configuration=${{ matrix.configuration }} -maxCpuCount
